{"version":3,"sources":["Components/assets/knowledge.webp","Components/Dictionary.js","Components/LeaderBoard.js","Components/Preloader.js","Components/Question.js","Components/firebase.js","Components/Results.js","Components/library.js","Components/StartScreen.js","Components/ToggleBttn.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Dictionary","getDefinition","entries","iteration","axios","url","method","params","sp","md","then","response","data","entriesForModding","state","entriesFormatted","currentEntry","word","def","defs","split","push","console","log","setState","length","catch","error","this","props","className","to","map","item","i","key","Component","LeaderBoard","visibility","leaderBVisibility","onMouseDown","handleMouseDown","leaderBInfo","fbInfo","index","name","score","time","Preloader","Question","getComparison","chosenWord","rel_hom","wordsWithDefs","filter","randomNumberForDefs","Math","round","random","definition","correctWord","isLoading","formatDefinition","buttonRandomizer","defToBeFormatted","startTimer","gameTime","setInterval","gameOver","clearInterval","timer","handleClick","theWord","rightWords","wrongAnswers","wrongWords","rightAnswers","questionNumber","words","triggerResults","background","current","classList","toggle","setTimeout","buttonsReadyForStates","answer","reverse","buttons","answers","React","createRef","questionButtons","ref","button","onClick","style","width","src","knowledge","alt","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Results","handleNameChange","event","userInput","target","value","userScore","handleSubmit","preventDefault","dbRef","database","leaderObject","playerTime","action","onSubmit","htmlFor","type","id","onChange","addToDictionary","easyWords","mediumWords","hardWords","ToggleBttn","App","e","toggleLeaderB","stopPropagation","visible","randomizer","arrayToRandom","clickedButton","levelButton","remove","childNodes","add","gameArray","game","randomNumber","floor","randomNumberForWord","splice","levelSelected","displayResults","rightWordsWrongAnswers","concat","playerScore","word1","word2","entriesToMod","unshift","uniqueEntries","originalArray","indexOf","on","nameFromDb","val","stateToBeSet","nameInfo","sort","a","b","path","exact","dictionaryWords","dictionary","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.483416e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/knowledge.9f3db455.webp\";","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Dictionary extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tentries: [],\n\t\t\tentriesFormatted: [],\n\t\t\titeration: 0\n\t\t};\n\t}\n\n\t// on mount make axios call to get definitions\n\tcomponentDidMount() {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tentries: this.props.entries\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.getDefinition(this.state.entries, this.state.iteration);\n\t\t\t}\n\t\t);\n\t}\n\n\tgetDefinition = (entries, iteration) => {\n\t\taxios({\n\t\t\turl: `https://api.datamuse.com/words?`,\n\t\t\tmethod: \"GET\",\n\t\t\tparams: {\n\t\t\t\tsp: entries[iteration],\n\t\t\t\tmd: \"dp\"\n\t\t\t}\n\t\t})\n\t\t\t.then(response => {\n\t\t\t\tresponse = response.data;\n\t\t\t\tconst entriesForModding = [...this.state.entriesFormatted];\n\t\t\t\tconst currentEntry = {\n\t\t\t\t\tword: entries[iteration],\n\t\t\t\t\tdef: response[0].defs[0]\n\t\t\t\t};\n\n\t\t\t\t// logic to separate the 'n / v / adj ' portion from the definition to style it differently\n\t\t\t\tcurrentEntry.def = currentEntry.def.split(\"\\t\");\n\t\t\t\tcurrentEntry.def[0] = currentEntry.def[0] + \" \";\n\t\t\t\tentriesForModding.push(currentEntry);\n\t\t\t\tconsole.log(entriesForModding);\n\t\t\t\tthis.setState(\n\t\t\t\t\t{\n\t\t\t\t\t\tentriesFormatted: entriesForModding,\n\t\t\t\t\t\titeration: this.state.iteration + 1\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (this.state.iteration < this.state.entries.length) {\n\t\t\t\t\t\t\tthis.getDefinition(this.state.entries, this.state.iteration);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error, \"you gooft it\");\n\t\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<section className=\"dictionarySection\">\n\t\t\t\t<h2>my dictionary</h2>\n\t\t\t\t<Link className=\"goHome mainButton\" to=\"/whatDoYouNo/\">\n\t\t\t\t\tHome\n\t\t\t\t</Link>\n\t\t\t\t{this.state.entriesFormatted.length > 0 ? (\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{this.state.entriesFormatted.map((item, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t\t\t\t<h3>{item.word}</h3>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t<span className=\"wordType\">{item.def[0]} </span>\n\t\t\t\t\t\t\t\t\t\t{item.def[1]}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t) : (\n\t\t\t\t\t<p className=\"emptyDictionary\">Add words from the results page to see their definitions displayed here!</p>\n\t\t\t\t)}\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nexport default Dictionary;\n//\n","import React, { Component } from \"react\";\n\nclass LeaderBoard extends Component {\n\tconstructor() {\n\t\tsuper();\n\t}\n\trender() {\n\t\tlet visibility = 'hide';\n\n\t\tif (this.props.leaderBVisibility){\n\t\t\tvisibility = 'show';\n\t\t}\n\n\t\treturn (\n\t\t\t<div  \n\t\t\t\tonMouseDown={this.props.handleMouseDown} className={`${visibility} leaderBoard`}>\n\t\t\t<h2 className=\"leaderboardHeader\">highscores</h2>\n\t\t\t\n\t\t\t<ol className=\"leaderboardList\">\n\n\t\t\t{this.props.leaderBInfo.map((fbInfo, index) =>{\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li \n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tclassName=\"leaderboardItems\">\n\t\t\t\t\t\t\t<p className=\"leaderboardItem\"><span className='leaderboardSpan'>name:</span> {fbInfo.name}</p>\n\t\t\t\t\t\t\t\t<p className=\"leaderboardItem\"><span className='leaderboardSpan'>score:</span> {fbInfo.score}/10</p>\n\t\t\t\t\t\t\t\t<p className=\"leaderboardItem\"><span className='leaderboardSpan'>time:</span> {fbInfo.time} secs</p>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\n\t\t\t</ol>\n\t\t</div>\n\t\t)\n\t}\n}\n\nexport default LeaderBoard;\n","// Not sure if this should be capitalized\nimport React, { Component } from \"react\";\n\nclass Preloader extends Component {\n    render() {\n        return (\n            <div className=\"preloader\">\n                <p className=\"animated infinite bounceIn\">Loading...</p>\n            </div>\n        );\n    }\n}\n\nexport default Preloader;\n","import React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport knowledge from \"./assets/knowledge.webp\";\nimport Preloader from \"./Preloader.js\";\nimport { Link } from \"react-router-dom\";\n\nclass Question extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tcorrectWord: \"\",\n\t\t\tdefinition: \"\",\n\t\t\tscore: 0,\n\t\t\tquestionNumber: 1,\n\t\t\tanswers: [],\n\t\t\tbuttons: [],\n\t\t\ttimer: 0,\n\t\t\tgameOver: false,\n\t\t\tisLoading: true,\n\t\t\terror: false,\n\t\t\trightWords: [],\n\t\t\twrongAnswers: [],\n\t\t\twrongWords: [],\n\t\t\trightAnswers: []\n\t\t};\n\t\tthis.background = React.createRef();\n\t\tthis.questionButtons = React.createRef();\n\t}\n\n\t//////////////////////////////////////////////////////////\n\t// -----------------make axios call---------------------//\n\t//////////////////////////////////////////////////////////\n\tcomponentDidMount() {\n\t\tthis.getComparison(this.props.words[0]);\n\t\tthis.startTimer();\n\t}\n\n\t//////////////////////////////////////////\n\t// -----------axios call----------------//\n\t//////////////////////////////////////////\n\tgetComparison = chosenWord => {\n\t\taxios({\n\t\t\turl: `https://api.datamuse.com/words?`,\n\t\t\tmethod: \"GET\",\n\t\t\tparams: {\n\t\t\t\trel_hom: chosenWord,\n\t\t\t\tmd: \"d\"\n\t\t\t}\n\t\t})\n\t\t\t///////////////////////////////////////////////////////////////////\n\t\t\t//------------to make sure if the word has definition-------------//\n\t\t\t////////////////////////////////////////////////////////////////////\n\t\t\t.then(response => {\n\t\t\t\tresponse = response.data;\n\n\t\t\t\tconst wordsWithDefs = response.filter(word => {\n\t\t\t\t\treturn word.defs;\n\t\t\t\t});\n\n\t\t\t\tlet randomNumberForDefs = 0;\n\n\t\t\t\tif (wordsWithDefs[0].defs.length > 1) {\n\t\t\t\t\trandomNumberForDefs = Math.round(Math.random() * 1);\n\t\t\t\t}\n\n\t\t\t\tthis.setState(\n\t\t\t\t\t{\n\t\t\t\t\t\tdefinition: wordsWithDefs[0].defs[randomNumberForDefs],\n\t\t\t\t\t\tcorrectWord: wordsWithDefs[0].word,\n\t\t\t\t\t\tisLoading: false\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\t// ---randomize which button holds the correct answer---//\n\t\t\t\t\t\tthis.formatDefinition();\n\t\t\t\t\t\tthis.buttonRandomizer();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({\n\t\t\t\t\terror: true\n\t\t\t\t});\n\t\t\t});\n\n\t\t///////////////////////////////////////////////////////\n\t\t//------------ still need to work on it--------------///\n\t\t////////////////////////////////////////////////////////\n\t\tthis.formatDefinition = () => {\n\t\t\tlet defToBeFormatted = this.state.definition;\n\t\t\tdefToBeFormatted = defToBeFormatted.split(\"\\t\");\n\t\t\tdefToBeFormatted[0] = defToBeFormatted[0] + \" \";\n\t\t\tthis.setState({\n\t\t\t\tdefinition: defToBeFormatted\n\t\t\t});\n\t\t};\n\t};\n\n\tstartTimer = () => {\n\t\tconst gameTime = setInterval(() => {\n\t\t\tif (this.state.gameOver === true) {\n\t\t\t\tclearInterval(gameTime);\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttimer: this.state.timer + 1\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t};\n\n\t//---When button is clicked, check if the answer is true or false and increase the score based on the answer and the question number goes up by 1 on every click---//\n\thandleClick = theWord => {\n\t\tconst rightWords = [...this.state.rightWords];\n\t\tconst wrongAnswers = [...this.state.wrongAnswers];\n\n\t\tconst wrongWords = [...this.state.wrongWords];\n\t\tconst rightAnswers = [...this.state.rightAnswers];\n\n\t\tif (this.state.questionNumber > 9) {\n\t\t\tif (theWord) {\n\t\t\t\trightWords.push(this.state.correctWord);\n\t\t\t\twrongAnswers.push(this.props.words[this.state.questionNumber - 1]);\n\n\t\t\t\tthis.setState(\n\t\t\t\t\t{\n\t\t\t\t\t\tgameOver: true,\n\t\t\t\t\t\tquestionNumber: this.state.questionNumber + 1,\n\t\t\t\t\t\tscore: this.state.score + 1,\n\t\t\t\t\t\trightWords,\n\t\t\t\t\t\twrongAnswers\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.props.triggerResults(\n\t\t\t\t\t\t\tthis.state.score,\n\t\t\t\t\t\t\tthis.state.timer,\n\t\t\t\t\t\t\tthis.state.rightWords,\n\t\t\t\t\t\t\tthis.state.wrongAnswers,\n\t\t\t\t\t\t\tthis.state.wrongWords,\n\t\t\t\t\t\t\tthis.state.rightAnswers\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} else if (!theWord) {\n\t\t\t\twrongWords.push(this.props.words[this.state.questionNumber - 1]);\n\t\t\t\trightAnswers.push(this.state.correctWord);\n\n\t\t\t\tthis.setState(\n\t\t\t\t\t{\n\t\t\t\t\t\tgameOver: true,\n\t\t\t\t\t\tquestionNumber: this.state.questionNumber + 1,\n\t\t\t\t\t\twrongWords,\n\t\t\t\t\t\trightAnswers\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.props.triggerResults(\n\t\t\t\t\t\t\tthis.state.score,\n\t\t\t\t\t\t\tthis.state.timer,\n\t\t\t\t\t\t\tthis.state.rightWords,\n\t\t\t\t\t\t\tthis.state.wrongAnswers,\n\t\t\t\t\t\t\tthis.state.wrongWords,\n\t\t\t\t\t\t\tthis.state.rightAnswers\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (theWord === true) {\n\t\t\trightWords.push(this.state.correctWord);\n\t\t\twrongAnswers.push(this.props.words[this.state.questionNumber - 1]);\n\n\t\t\tthis.background.current.classList.toggle(\"correct\");\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.background.current.classList.toggle(\"correct\");\n\n\t\t\t\tthis.setState(\n\t\t\t\t\t{\n\t\t\t\t\t\tscore: this.state.score + 1,\n\t\t\t\t\t\tquestionNumber: this.state.questionNumber + 1,\n\t\t\t\t\t\trightWords,\n\t\t\t\t\t\twrongAnswers\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\t// -- once the score and question number are set to the state, compare the value (the question number has to be the number minus 1 because array order starts from 0) --//\n\t\t\t\t\t\tthis.getComparison(this.props.words[this.state.questionNumber - 1]);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\t// -----the dictionary variable is to store wrong answers and show them to users at the end of the game-----//\n\t\t\twrongWords.push(this.props.words[this.state.questionNumber - 1]);\n\t\t\trightAnswers.push(this.state.correctWord);\n\n\t\t\tthis.background.current.classList.toggle(\"incorrect\");\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.background.current.classList.toggle(\"incorrect\");\n\n\t\t\t\tthis.setState(\n\t\t\t\t\t{\n\t\t\t\t\t\tquestionNumber: this.state.questionNumber + 1,\n\t\t\t\t\t\twrongWords,\n\t\t\t\t\t\trightAnswers\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\t// -- once the score and question number are set to the state, compare the value (the question number has to be the number minus 1 because array order starts from 0) --//\n\t\t\t\t\t\tthis.getComparison(this.props.words[this.state.questionNumber - 1]);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}, 1000);\n\t\t}\n\t};\n\n\t//----randomize the buttons so users don't know where the right answer button is----//\n\tbuttonRandomizer = () => {\n\t\tconst buttonsReadyForStates = [\n\t\t\t{\n\t\t\t\tword: this.props.words[this.state.questionNumber - 1],\n\t\t\t\tanswer: false\n\t\t\t},\n\t\t\t{\n\t\t\t\tword: this.state.correctWord,\n\t\t\t\tanswer: true\n\t\t\t}\n\t\t];\n\n\t\t//---every time the random number is 1, reverse the order of the array---//\n\t\tconst randomQs = Math.round(Math.random() * 1);\n\t\tif (randomQs === 1) {\n\t\t\tbuttonsReadyForStates.reverse();\n\t\t}\n\t\tthis.setState({\n\t\t\tbuttons: buttonsReadyForStates\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{this.state.questionNumber < 11 ? (\n\t\t\t\t\t<div className=\"questionBox\" ref={this.background}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div className= \"questionTextBox\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<h2>Question {this.state.questionNumber}</h2>\n\n\t\t\t\t\t\t\t<div className=\"timer\">\n\t\t\t\t\t\t\t\t<p>time: {this.state.timer}</p>\n\t\t\t\t\t\t\t\t<p className=\"scoreCounter\">score: {this.state.score}</p>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{this.state.isLoading ? <Preloader /> : null}\n\n\t\t\t\t\t\t<p className=\"definition\">\n\t\t\t\t\t\t\t<span className=\"wordType\">{this.state.definition[0]} </span>\n\t\t\t\t\t\t\t{this.state.definition[1]}\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t<div className=\"buttonParent\">\n\t\t\t\t\t\t\t{this.state.buttons.length > 0\n\t\t\t\t\t\t\t\t? this.state.buttons.map((button, i) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\t\t\tref={this.questionButtons}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"wordButton\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.handleClick(button.answer);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{(button.word, button.word)}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t{this.state.error ? (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<p className=\"errorText\">error retrieving. please play again</p>\n\t\t\t\t\t\t\t\t\t<Link to=\"/whatDoYouNo/\" className=\"wordButton\">\n\t\t\t\t\t\t\t\t\t\tgo back home\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"progressBar\">\n\t\t\t\t\t\t\t<span style={{ width: `${this.state.questionNumber * 10}%` }} className=\"questionSpan\"></span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"questionBox congrats\">\n\t\t\t\t\t\t<h2 className=\"questionTitle\">Congratulations!</h2>\n\t\t\t\t\t\t<img src={knowledge} alt=\"Shooting star reading 'the more you know'\" className=\"questionImage\" />\n\n\t\t\t\t\t\t<div className=\"buttonParent\">\n\t\t\t\t\t\t\t<Link to=\"/whatDoYouNo/\" className=\"wordButton wordButtonCongrats\">\n\t\t\t\t\t\t\t\tPlay Again\n\t\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t\t<Link to=\"/whatDoYouNo/results\" className=\"wordButton wordButtonCongrats\">\n\t\t\t\t\t\t\t\tShow Results\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default Question;\n\n//----------pesudo code-------------//\n\n// randomize which button is correct position stuff\n\n// save if wrong\n","// firebase.js\nimport firebase from 'firebase';\n\nconst Config = {\n    apiKey: \"AIzaSyAw9emxpitC0ImZ5pTtd31VJzNY24hUgQY\",\n    authDomain: \"whatdoyouno-d23b3.firebaseapp.com\",\n    databaseURL: \"https://whatdoyouno-d23b3.firebaseio.com\",\n    projectId: \"whatdoyouno-d23b3\",\n    storageBucket: \"whatdoyouno-d23b3.appspot.com\",\n    messagingSenderId: \"557343711617\",\n    appId: \"1:557343711617:web:338d8fa6efad00aa400880\"\n};\n// Initialize Firebase\n\nfirebase.initializeApp(Config);\n\nexport default firebase;","import React, { Component } from \"react\";\nimport firebase from \"./firebase.js\";\nimport {Link} from \"react-router-dom\";\n\nclass Results extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tuserInput: \"\"\n\t\t};\n\t}\n\n\thandleNameChange = event => {\n\t\tthis.setState({\n\t\t\tuserInput: event.target.value,\n\t\t\tuserScore: event.target.value\n\t\t});\n\t};\n\n\thandleSubmit = event => {\n\t\tevent.preventDefault();\n\n\t\tconst dbRef = firebase.database().ref();\n\n\t\tconst leaderObject = {\n\t\t\tname: this.state.userInput,\n\t\t\tscore: this.props.score,\n\t\t\ttime: this.props.playerTime\n\t\t};\n\n\t\tdbRef.push(leaderObject);\n\n\t\tthis.setState({\n\t\t\tuserInput: \"\"\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t// start of resultsCont\n\t\t\t<div className=\"resultsCont\">\n\t\t\t\t<h3 className=\"resultsHeader\">great work!</h3>\n\t\t\t\t<Link className=\"goHome mainButton\" to=\"/whatDoYouNo/\">\n\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t</Link>\n\t\t\t\t<div className=\"resultsScore\">\n\t\t\t\t\t<h4>Your Score: {this.props.score}</h4>\n\t\t\t\t\t<h4>Time (in secs): {this.props.playerTime}</h4>\n\t\t\t\t</div>\n\n\t\t\t\t{/* start of form */}\n\t\t\t\t<form action=\"submit\" onSubmit={this.handleSubmit} className=\"resultsForm\">\n\t\t\t\t\t<label htmlFor=\"enterName\" className=\"resultsInput\">\n\t\t\t\t\t\tAdd your name and score to the leaderboard:\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"enterName\"\n\t\t\t\t\t\tclassName=\"resultsInput\"\n\t\t\t\t\t\tvalue={this.state.userInput}\n\t\t\t\t\t\tonChange={this.handleNameChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"resultsButton resultsInput\" type=\"submit\">\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t\t{/* end of form */}\n\t\t\t\t{/* start of dictionary */}\n\t\t\t\t<div className=\"addToDictionList\">\n\t\t\t\t\t<h3>click to add words to your dictionary</h3>\n\t\t\t\t\t<h4>right answers</h4>\n\t\t\t\t\t<h4>wrong answers</h4>\n\n\t\t\t\t\t<ul className=\"rightWordsList\">\n\t\t\t\t\t\t{this.props.rightWords.map((word, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li className=\"addToDictionItem rightWords\" key={i}\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.props.addToDictionary(this.props.rightWords[i], this.props.wrongAnswers[i])}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span>{this.props.rightWords[i]}</span> & <span>{this.props.wrongAnswers[i]}</span>\n\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t\t<ul className=\"wrongWordsList\">\n\t\t\t\t\t\t{this.props.wrongWords.map((word, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li className=\"addToDictionItem wrongWords\" key={i}\n\t\t\t\t\t\t\t\t\t\tonClick={() => this.props.addToDictionary(this.props.wrongWords[i], this.props.rightAnswers[i])}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span>{this.props.wrongWords[i]}</span> & <span>{this.props.rightAnswers[i]}</span>\n\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<Link to=\"/whatDoYouNo/dictionary\" className='dictionaryPlease'>my dictionary</Link>\n\t\t\t\t{/* end of dictionary */}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Results;\n\n// onClick = {() => {\n// \tthis.props.addToDictionary(resultWords.word1, resultWords.word2);\n// }}\n","// import React from \"react\";\n\nconst easyWords = [\n\t[\"ate\", \"eight\"],\n\t[\"bread\", \"bred\"],\n\t[\"cell\", \"sell\"],\n\t[\"chews\", \"choose\"],\n\t[\"meet\", \"meat\"],\n\t[\"clothes\", \"close\"],\n\t[\"coarse\", \"course\"],\n\t[\"crews\", \"cruise\"],\n\t[\"capital\", \"capitol\"],\n\t[\"dew\", \"due\"],\n\t[\"die\", \"dye\"],\n\t[\"doe\", \"dough\"],\n\t[\"allowed\", \"aloud\"],\n\t[\"fur\", \"fir\"],\n\t[\"flea\", \"flee\"],\n\t[\"jean\", \"gene\"]\n];\nconst mediumWords = [\n\t[\"air\", \"heir\"],\n\t[\"bale\", \"bail\"],\n\t[\"die\", \"dye\"],\n\t[\"berth\", \"birth\"],\n\t[\"chord\", \"cord\"],\n\t[\"cite\", \"site\"],\n\t[\"ceiling\", \"sealing\"],\n\t[\"stare\", \"stair\"],\n\t[\"fined\", \"find\"],\n\t[\"pee\", \"pea\"],\n\t[\"mail\", \"male\"],\n\t[\"lessen\", \"lesson\"],\n\t[\"role\", \"roll\"],\n\t[\"dual\", \"duel\"],\n\t[\"cash\", \"cache\"],\n\t[\"gait\", \"gate\"],\n];\nconst hardWords = [\n\t[\"holy\", \"wholly\"],\n\t[\"stationary\", \"stationery\"],\n\t[\"council\", \"counsel\"],\n\t[\"cannon\", \"canon\"],\n\t[\"leased\", \"least\"],\n\t[\"desert\", \"dessert\"],\n\t[\"overdue\", \"overdo\"],\n\t[\"medal\", \"metal\"],\n\t[\"course\", \"coarse\"],\n\t[\"scent\", \"cent\"],\n\t[\"raze\", \"raise\"]\n];\n\nexport { easyWords, mediumWords, hardWords };\n\n\n\t\n","import React, { Component } from \"react\";\n\nclass StartScreen extends Component {\n\tconstructor() {\n\t\tsuper();\n\t}\n\trender() {\n\t\treturn <div></div>;\n\t}\n}\n\nexport default StartScreen;\n","import React, { Component } from \"react\";\n\nclass ToggleBttn extends Component {\n    render(){\n    return(\n        <button className=\"toggleBttn\"\n        onMouseDown={this.props.handleMouseDown}> Leaderboard\n        </button>\n        )\n    }\n}\n\nexport default ToggleBttn;","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Dictionary from \"./Components/Dictionary.js\";\nimport LeaderBoard from \"./Components/LeaderBoard.js\";\nimport Question from \"./Components/Question.js\";\nimport Results from \"./Components/Results.js\";\nimport StartScreen from \"./Components/StartScreen.js\";\nimport axios from \"axios\";\nimport library from \"./Components/library\";\nimport firebase from \"./Components/firebase.js\";\nimport { easyWords, mediumWords, hardWords } from \"./Components/library\";\nimport ToggleBttn from \"./Components/ToggleBttn.js\";\nimport \"./Components/mediaQuery.css\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\twords: [],\n\t\t\tplayerScore: \"\",\n\t\t\ttimer: \"\",\n\t\t\tentries: [],\n\t\t\tlevelSelected: false,\n\t\t\tleaderBInfo: [],\n\t\t\tvisible: false,\n\t\t\tlevelButton: \"\",\n\t\t\trightWords: [],\n\t\t\twrongAnswers: [],\n\t\t\twrongWords: [],\n\t\t\trightAnswers: [],\n\t\t\trightWordsWrongAnswers: []\n\t\t};\n\n\t\tthis.levelButton = React.createRef();\n\t}\n\n\t// populate leaderboard with data from FB\n\tcomponentDidMount() {\n\t\tconst dbRef = firebase.database().ref();\n\n\t\tdbRef.on(\"value\", response => {\n\t\t\tconst nameFromDb = response.val();\n\n\t\t\tconst stateToBeSet = [];\n\n\t\t\tfor (let key in nameFromDb) {\n\t\t\t\tconst nameInfo = {\n\t\t\t\t\tkey: key,\n\t\t\t\t\tname: nameFromDb[key].name,\n\t\t\t\t\tscore: nameFromDb[key].score,\n\t\t\t\t\ttime: nameFromDb[key].time\n\t\t\t\t};\n\t\t\t\tstateToBeSet.push(nameInfo);\n\t\t\t\tstateToBeSet.sort((a, b) => b.score - a.score);\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tleaderBInfo: stateToBeSet\n\t\t\t});\n\t\t});\n\t}\n\n\t// toggle leaderboard\n\n\thandleMouseDown = e => {\n\t\tthis.toggleLeaderB();\n\t\tconsole.log(\"clicked\");\n\t\te.stopPropagation();\n\t};\n\n\ttoggleLeaderB = () => {\n\t\tthis.setState({\n\t\t\tvisible: !this.state.visible\n\t\t});\n\t};\n\n\t// populate our call with a word from our local array\n\n\trandomizer = (arrayToRandom, clickedButton) => {\n\t\tif (this.state.levelButton) {\n\t\t\tthis.state.levelButton.classList.remove(\"levelSelected\");\n\t\t}\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tlevelButton: this.levelButton.current.childNodes[clickedButton]\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.state.levelButton.classList.add(\"levelSelected\");\n\t\t\t}\n\t\t);\n\n\t\tconst gameArray = [];\n\n\t\tconst game = [...arrayToRandom];\n\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tconst randomNumber = Math.floor(Math.random() * game.length);\n\n\t\t\tconst randomNumberForWord = Math.round(Math.random() * 1);\n\n\t\t\tgameArray.push(game[randomNumber][randomNumberForWord]);\n\n\t\t\tgame.splice(randomNumber, 1);\n\t\t}\n\n\t\tthis.setState({\n\t\t\twords: gameArray,\n\t\t\tlevelSelected: true\n\t\t});\n\t};\n\n\t// sets state in App to check what question\n\tdisplayResults = (score, timer, rightWords, wrongAnswers, wrongWords, rightAnswers) => {\n\t\tconst rightWordsWrongAnswers = rightWords.concat(wrongAnswers);\n\n\t\tthis.setState({\n\t\t\tplayerScore: score,\n\t\t\tgameOver: true,\n\t\t\ttimer: timer,\n\t\t\trightWords,\n\t\t\twrongAnswers,\n\t\t\twrongWords,\n\t\t\trightAnswers,\n\t\t\trightWordsWrongAnswers\n\t\t});\n\t};\n\n\taddToDictionary = (word1, word2) => {\n\t\tconsole.log(word1, word2);\n\n\t\tconst entriesToMod = [...this.state.entries];\n\n\t\tentriesToMod.unshift(word1, word2);\n\n\t\tconst uniqueEntries = entriesToMod.filter((item, index, originalArray) => {\n\t\t\treturn originalArray.indexOf(item) === index;\n\t\t});\n\n\t\tthis.setState({\n\t\t\tentries: uniqueEntries\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<div className=\"innerWrapper\">\n\t\t\t\t\t\t\t{/* <Link to=\"/whatDoYouNo/\"> */}\n\t\t\t\t\t\t\t<h1>What Do You No</h1>\n\t\t\t\t\t\t\t{/* </Link> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<div className=\"innerWrapper\">\n\t\t\t\t\t\t\t<Route path=\"/whatDoYouNo/\" exact>\n\t\t\t\t\t\t\t\t{/* start of mainBackground */}\n\t\t\t\t\t\t\t\t<div className=\"mainBackground\">\n\t\t\t\t\t\t\t\t\t<h2 className=\"headerText\">Expand Your Vocabulary with Homophones</h2>\n\n\t\t\t\t\t\t\t\t\t<p className=\"homophoneDef\">\n\t\t\t\t\t\t\t\t\t\tA <span className=\"homophoneItalic\">homophone</span> is one of two or more words that are pronounced\n\t\t\t\t\t\t\t\t\t\tthe same, but are different in meaning. <span className=\"homophoneItalic\">Two, to</span> and{\" \"}\n\t\t\t\t\t\t\t\t\t\t<span className=\"homophoneItalic\">too</span> are homophones, along with{\" \"}\n\t\t\t\t\t\t\t\t\t\t<span className=\"homophoneItalic\">presents</span> and{\" \"}\n\t\t\t\t\t\t\t\t\t\t<span className=\"homophoneItalic\">presence</span>.\n\t\t\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t\t\t<h2 className=\"instructions\">Instructions</h2>\n\n\t\t\t\t\t\t\t\t\t<p className=\"homophoneDef\">\n\t\t\t\t\t\t\t\t\t\tSelect your level of difficulty below and click start. Click on the word that matches the definition\n\t\t\t\t\t\t\t\t\t\tshown. Your number of correct answers determines your place on the leaderboard! Good luck!\n\t\t\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t\t\t<div ref={this.levelButton} className=\"buttonContainer\">\n\t\t\t\t\t\t\t\t\t\t<button onClick={() => this.randomizer(easyWords, 0)}>easy</button>\n\t\t\t\t\t\t\t\t\t\t<button onClick={() => this.randomizer(mediumWords, 1)}>medium</button>\n\t\t\t\t\t\t\t\t\t\t<button onClick={() => this.randomizer(hardWords, 2)}>hard</button>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t{this.state.levelSelected ? (\n\t\t\t\t\t\t\t\t\t\t<Link className=\"mainButton\" to=\"/whatDoYouNo/questions\">\n\t\t\t\t\t\t\t\t\t\t\tstart game\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t{/* end of mainBackground */}\n\t\t\t\t\t\t\t\t<Link to=\"/whatDoYouNo/dictionary\" className=\"dictionaryPlease\">\n\t\t\t\t\t\t\t\t\tmy dictionary\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t<ToggleBttn handleMouseDown={this.handleMouseDown} />\n\n\t\t\t\t\t\t\t<Route path=\"/whatDoYouNo/questions\">\n\t\t\t\t\t\t\t\t<Question words={this.state.words} triggerResults={this.displayResults} />\n\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t<Route path=\"/whatDoYouNo/results\">\n\t\t\t\t\t\t\t\t<Results\n\t\t\t\t\t\t\t\t\tscore={this.state.playerScore}\n\t\t\t\t\t\t\t\t\tdictionaryWords={this.state.dictionary}\n\t\t\t\t\t\t\t\t\tplayerTime={this.state.timer}\n\t\t\t\t\t\t\t\t\taddToDictionary={this.addToDictionary}\n\t\t\t\t\t\t\t\t\trightWords={this.state.rightWords}\n\t\t\t\t\t\t\t\t\twrongAnswers={this.state.wrongAnswers}\n\t\t\t\t\t\t\t\t\twrongWords={this.state.wrongWords}\n\t\t\t\t\t\t\t\t\trightAnswers={this.state.rightAnswers}\n\t\t\t\t\t\t\t\t\trightWordsWrongAnswers={this.state.rightWordsWrongAnswers}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t<Route path=\"/whatDoYouNo/dictionary\">\n\t\t\t\t\t\t\t\t<Dictionary entries={this.state.entries} />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</main>\n\n\t\t\t\t\t<aside>\n\t\t\t\t\t\t<div className=\"innerWrapper\">\n\t\t\t\t\t\t\t<LeaderBoard\n\t\t\t\t\t\t\t\tleaderBInfo={this.state.leaderBInfo}\n\t\t\t\t\t\t\t\thandleMouseDown={this.handleMouseDown}\n\t\t\t\t\t\t\t\tleaderBVisibility={this.state.visible}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</aside>\n\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<p>a team GRRR8t game</p>\n\t\t\t\t\t</footer>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n\n// make the timeout longer (1sec?)----------------//\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}